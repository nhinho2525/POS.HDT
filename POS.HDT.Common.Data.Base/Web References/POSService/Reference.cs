//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace POS.HDT.Common.Data.Base.POSService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="POSServiceSoap", Namespace="http://tempuri.org/")]
    public partial class POSService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsServiceReadyOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsDataReadyOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback DataQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback DataStoreProcQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback DataStoreProcQuery_ParamOperationCompleted;
        
        private System.Threading.SendOrPostCallback DataStoreProcExecuteOperationCompleted;
        
        private System.Threading.SendOrPostCallback DataStoreProceduceAndMultiQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback DataExecuteOperationCompleted;
        
        private System.Threading.SendOrPostCallback DataExecuteIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback DataMultiExecuteOperationCompleted;
        
        private System.Threading.SendOrPostCallback DataScalarOperationCompleted;
        
        private System.Threading.SendOrPostCallback DataCommandBuilderUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback DataSaveImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback DataReadImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback DataExecuteForProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback DataExecuteEdit_ForProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback Tran_Insert_for_OrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback Tran_Insert_ReceiptOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveImage_IntoObjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveImage_IntoEmployeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveImage_IntoProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback Print_OrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback Update_DeskId_For_OrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback Update_Order_DetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetValueScoreExOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPriceScoreOperationCompleted;
        
        private System.Threading.SendOrPostCallback Write_Score_ValueOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public POSService() {
            this.Url = global::POS.HDT.Common.Data.Base.Properties.Settings.Default.POS_HDT_Common_Data_Base_POSService_POSService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event IsServiceReadyCompletedEventHandler IsServiceReadyCompleted;
        
        /// <remarks/>
        public event IsDataReadyCompletedEventHandler IsDataReadyCompleted;
        
        /// <remarks/>
        public event IsUserCompletedEventHandler IsUserCompleted;
        
        /// <remarks/>
        public event DataQueryCompletedEventHandler DataQueryCompleted;
        
        /// <remarks/>
        public event DataStoreProcQueryCompletedEventHandler DataStoreProcQueryCompleted;
        
        /// <remarks/>
        public event DataStoreProcQuery_ParamCompletedEventHandler DataStoreProcQuery_ParamCompleted;
        
        /// <remarks/>
        public event DataStoreProcExecuteCompletedEventHandler DataStoreProcExecuteCompleted;
        
        /// <remarks/>
        public event DataStoreProceduceAndMultiQueryCompletedEventHandler DataStoreProceduceAndMultiQueryCompleted;
        
        /// <remarks/>
        public event DataExecuteCompletedEventHandler DataExecuteCompleted;
        
        /// <remarks/>
        public event DataExecuteIdCompletedEventHandler DataExecuteIdCompleted;
        
        /// <remarks/>
        public event DataMultiExecuteCompletedEventHandler DataMultiExecuteCompleted;
        
        /// <remarks/>
        public event DataScalarCompletedEventHandler DataScalarCompleted;
        
        /// <remarks/>
        public event DataCommandBuilderUpdateCompletedEventHandler DataCommandBuilderUpdateCompleted;
        
        /// <remarks/>
        public event DataSaveImageCompletedEventHandler DataSaveImageCompleted;
        
        /// <remarks/>
        public event DataReadImageCompletedEventHandler DataReadImageCompleted;
        
        /// <remarks/>
        public event DataExecuteForProductCompletedEventHandler DataExecuteForProductCompleted;
        
        /// <remarks/>
        public event DataExecuteEdit_ForProductCompletedEventHandler DataExecuteEdit_ForProductCompleted;
        
        /// <remarks/>
        public event Tran_Insert_for_OrderCompletedEventHandler Tran_Insert_for_OrderCompleted;
        
        /// <remarks/>
        public event Tran_Insert_ReceiptCompletedEventHandler Tran_Insert_ReceiptCompleted;
        
        /// <remarks/>
        public event SaveImage_IntoObjectCompletedEventHandler SaveImage_IntoObjectCompleted;
        
        /// <remarks/>
        public event SaveImage_IntoEmployeeCompletedEventHandler SaveImage_IntoEmployeeCompleted;
        
        /// <remarks/>
        public event SaveImage_IntoProductCompletedEventHandler SaveImage_IntoProductCompleted;
        
        /// <remarks/>
        public event Print_OrderCompletedEventHandler Print_OrderCompleted;
        
        /// <remarks/>
        public event Update_DeskId_For_OrderCompletedEventHandler Update_DeskId_For_OrderCompleted;
        
        /// <remarks/>
        public event Update_Order_DetailCompletedEventHandler Update_Order_DetailCompleted;
        
        /// <remarks/>
        public event GetValueScoreExCompletedEventHandler GetValueScoreExCompleted;
        
        /// <remarks/>
        public event GetPriceScoreCompletedEventHandler GetPriceScoreCompleted;
        
        /// <remarks/>
        public event Write_Score_ValueCompletedEventHandler Write_Score_ValueCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsServiceReady", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsServiceReady() {
            object[] results = this.Invoke("IsServiceReady", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsServiceReadyAsync() {
            this.IsServiceReadyAsync(null);
        }
        
        /// <remarks/>
        public void IsServiceReadyAsync(object userState) {
            if ((this.IsServiceReadyOperationCompleted == null)) {
                this.IsServiceReadyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsServiceReadyOperationCompleted);
            }
            this.InvokeAsync("IsServiceReady", new object[0], this.IsServiceReadyOperationCompleted, userState);
        }
        
        private void OnIsServiceReadyOperationCompleted(object arg) {
            if ((this.IsServiceReadyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsServiceReadyCompleted(this, new IsServiceReadyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsDataReady", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsDataReady() {
            object[] results = this.Invoke("IsDataReady", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsDataReadyAsync() {
            this.IsDataReadyAsync(null);
        }
        
        /// <remarks/>
        public void IsDataReadyAsync(object userState) {
            if ((this.IsDataReadyOperationCompleted == null)) {
                this.IsDataReadyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsDataReadyOperationCompleted);
            }
            this.InvokeAsync("IsDataReady", new object[0], this.IsDataReadyOperationCompleted, userState);
        }
        
        private void OnIsDataReadyOperationCompleted(object arg) {
            if ((this.IsDataReadyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsDataReadyCompleted(this, new IsDataReadyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsUser(string pUsername, string pPassword, ref string pError) {
            object[] results = this.Invoke("IsUser", new object[] {
                        pUsername,
                        pPassword,
                        pError});
            pError = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsUserAsync(string pUsername, string pPassword, string pError) {
            this.IsUserAsync(pUsername, pPassword, pError, null);
        }
        
        /// <remarks/>
        public void IsUserAsync(string pUsername, string pPassword, string pError, object userState) {
            if ((this.IsUserOperationCompleted == null)) {
                this.IsUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsUserOperationCompleted);
            }
            this.InvokeAsync("IsUser", new object[] {
                        pUsername,
                        pPassword,
                        pError}, this.IsUserOperationCompleted, userState);
        }
        
        private void OnIsUserOperationCompleted(object arg) {
            if ((this.IsUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsUserCompleted(this, new IsUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DataQuery", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DataQuery(string pUsernameOrId, string password, string pQueryString, ref System.Data.DataSet pDataset, string pTableName, ref string pError) {
            object[] results = this.Invoke("DataQuery", new object[] {
                        pUsernameOrId,
                        password,
                        pQueryString,
                        pDataset,
                        pTableName,
                        pError});
            pDataset = ((System.Data.DataSet)(results[0]));
            pError = ((string)(results[1]));
        }
        
        /// <remarks/>
        public void DataQueryAsync(string pUsernameOrId, string password, string pQueryString, System.Data.DataSet pDataset, string pTableName, string pError) {
            this.DataQueryAsync(pUsernameOrId, password, pQueryString, pDataset, pTableName, pError, null);
        }
        
        /// <remarks/>
        public void DataQueryAsync(string pUsernameOrId, string password, string pQueryString, System.Data.DataSet pDataset, string pTableName, string pError, object userState) {
            if ((this.DataQueryOperationCompleted == null)) {
                this.DataQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDataQueryOperationCompleted);
            }
            this.InvokeAsync("DataQuery", new object[] {
                        pUsernameOrId,
                        password,
                        pQueryString,
                        pDataset,
                        pTableName,
                        pError}, this.DataQueryOperationCompleted, userState);
        }
        
        private void OnDataQueryOperationCompleted(object arg) {
            if ((this.DataQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DataQueryCompleted(this, new DataQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DataStoreProcQuery", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DataStoreProcQuery(string pUsernameOrId, string password, string pQueryCmd, ref System.Data.DataSet pDataset, ref string pError) {
            object[] results = this.Invoke("DataStoreProcQuery", new object[] {
                        pUsernameOrId,
                        password,
                        pQueryCmd,
                        pDataset,
                        pError});
            pDataset = ((System.Data.DataSet)(results[0]));
            pError = ((string)(results[1]));
        }
        
        /// <remarks/>
        public void DataStoreProcQueryAsync(string pUsernameOrId, string password, string pQueryCmd, System.Data.DataSet pDataset, string pError) {
            this.DataStoreProcQueryAsync(pUsernameOrId, password, pQueryCmd, pDataset, pError, null);
        }
        
        /// <remarks/>
        public void DataStoreProcQueryAsync(string pUsernameOrId, string password, string pQueryCmd, System.Data.DataSet pDataset, string pError, object userState) {
            if ((this.DataStoreProcQueryOperationCompleted == null)) {
                this.DataStoreProcQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDataStoreProcQueryOperationCompleted);
            }
            this.InvokeAsync("DataStoreProcQuery", new object[] {
                        pUsernameOrId,
                        password,
                        pQueryCmd,
                        pDataset,
                        pError}, this.DataStoreProcQueryOperationCompleted, userState);
        }
        
        private void OnDataStoreProcQueryOperationCompleted(object arg) {
            if ((this.DataStoreProcQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DataStoreProcQueryCompleted(this, new DataStoreProcQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DataStoreProcQuery_Param", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DataStoreProcQuery_Param(string pUsernameOrId, string password, string pQueryCmd, ref System.Data.DataSet pDataset, [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")] [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)] string[][] param, ref string pError) {
            object[] results = this.Invoke("DataStoreProcQuery_Param", new object[] {
                        pUsernameOrId,
                        password,
                        pQueryCmd,
                        pDataset,
                        param,
                        pError});
            pDataset = ((System.Data.DataSet)(results[0]));
            pError = ((string)(results[1]));
        }
        
        /// <remarks/>
        public void DataStoreProcQuery_ParamAsync(string pUsernameOrId, string password, string pQueryCmd, System.Data.DataSet pDataset, string[][] param, string pError) {
            this.DataStoreProcQuery_ParamAsync(pUsernameOrId, password, pQueryCmd, pDataset, param, pError, null);
        }
        
        /// <remarks/>
        public void DataStoreProcQuery_ParamAsync(string pUsernameOrId, string password, string pQueryCmd, System.Data.DataSet pDataset, string[][] param, string pError, object userState) {
            if ((this.DataStoreProcQuery_ParamOperationCompleted == null)) {
                this.DataStoreProcQuery_ParamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDataStoreProcQuery_ParamOperationCompleted);
            }
            this.InvokeAsync("DataStoreProcQuery_Param", new object[] {
                        pUsernameOrId,
                        password,
                        pQueryCmd,
                        pDataset,
                        param,
                        pError}, this.DataStoreProcQuery_ParamOperationCompleted, userState);
        }
        
        private void OnDataStoreProcQuery_ParamOperationCompleted(object arg) {
            if ((this.DataStoreProcQuery_ParamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DataStoreProcQuery_ParamCompleted(this, new DataStoreProcQuery_ParamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DataStoreProcExecute", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DataStoreProcExecute(string pUsernameOrId, string password, string pQueryCmd, ref string pError, [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")] [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)] string[][] param, ref bool result) {
            object[] results = this.Invoke("DataStoreProcExecute", new object[] {
                        pUsernameOrId,
                        password,
                        pQueryCmd,
                        pError,
                        param,
                        result});
            pError = ((string)(results[0]));
            result = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void DataStoreProcExecuteAsync(string pUsernameOrId, string password, string pQueryCmd, string pError, string[][] param, bool result) {
            this.DataStoreProcExecuteAsync(pUsernameOrId, password, pQueryCmd, pError, param, result, null);
        }
        
        /// <remarks/>
        public void DataStoreProcExecuteAsync(string pUsernameOrId, string password, string pQueryCmd, string pError, string[][] param, bool result, object userState) {
            if ((this.DataStoreProcExecuteOperationCompleted == null)) {
                this.DataStoreProcExecuteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDataStoreProcExecuteOperationCompleted);
            }
            this.InvokeAsync("DataStoreProcExecute", new object[] {
                        pUsernameOrId,
                        password,
                        pQueryCmd,
                        pError,
                        param,
                        result}, this.DataStoreProcExecuteOperationCompleted, userState);
        }
        
        private void OnDataStoreProcExecuteOperationCompleted(object arg) {
            if ((this.DataStoreProcExecuteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DataStoreProcExecuteCompleted(this, new DataStoreProcExecuteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DataStoreProceduceAndMultiQuery", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DataStoreProceduceAndMultiQuery(string pUsernameOrId, string pPassword, string pQueryCmd, ref string pError, [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")] [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)] string[][] pParam, string[] pQueryOrder, ref bool pResult) {
            object[] results = this.Invoke("DataStoreProceduceAndMultiQuery", new object[] {
                        pUsernameOrId,
                        pPassword,
                        pQueryCmd,
                        pError,
                        pParam,
                        pQueryOrder,
                        pResult});
            pError = ((string)(results[0]));
            pResult = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void DataStoreProceduceAndMultiQueryAsync(string pUsernameOrId, string pPassword, string pQueryCmd, string pError, string[][] pParam, string[] pQueryOrder, bool pResult) {
            this.DataStoreProceduceAndMultiQueryAsync(pUsernameOrId, pPassword, pQueryCmd, pError, pParam, pQueryOrder, pResult, null);
        }
        
        /// <remarks/>
        public void DataStoreProceduceAndMultiQueryAsync(string pUsernameOrId, string pPassword, string pQueryCmd, string pError, string[][] pParam, string[] pQueryOrder, bool pResult, object userState) {
            if ((this.DataStoreProceduceAndMultiQueryOperationCompleted == null)) {
                this.DataStoreProceduceAndMultiQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDataStoreProceduceAndMultiQueryOperationCompleted);
            }
            this.InvokeAsync("DataStoreProceduceAndMultiQuery", new object[] {
                        pUsernameOrId,
                        pPassword,
                        pQueryCmd,
                        pError,
                        pParam,
                        pQueryOrder,
                        pResult}, this.DataStoreProceduceAndMultiQueryOperationCompleted, userState);
        }
        
        private void OnDataStoreProceduceAndMultiQueryOperationCompleted(object arg) {
            if ((this.DataStoreProceduceAndMultiQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DataStoreProceduceAndMultiQueryCompleted(this, new DataStoreProceduceAndMultiQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DataExecute", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DataExecute(string pUsernameOrId, string password, string pQueryString, ref string pError) {
            object[] results = this.Invoke("DataExecute", new object[] {
                        pUsernameOrId,
                        password,
                        pQueryString,
                        pError});
            pError = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DataExecuteAsync(string pUsernameOrId, string password, string pQueryString, string pError) {
            this.DataExecuteAsync(pUsernameOrId, password, pQueryString, pError, null);
        }
        
        /// <remarks/>
        public void DataExecuteAsync(string pUsernameOrId, string password, string pQueryString, string pError, object userState) {
            if ((this.DataExecuteOperationCompleted == null)) {
                this.DataExecuteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDataExecuteOperationCompleted);
            }
            this.InvokeAsync("DataExecute", new object[] {
                        pUsernameOrId,
                        password,
                        pQueryString,
                        pError}, this.DataExecuteOperationCompleted, userState);
        }
        
        private void OnDataExecuteOperationCompleted(object arg) {
            if ((this.DataExecuteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DataExecuteCompleted(this, new DataExecuteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DataExecuteId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DataExecuteId(string pUsernameOrId, string password, string pQueryString, ref long pId, ref string pError) {
            object[] results = this.Invoke("DataExecuteId", new object[] {
                        pUsernameOrId,
                        password,
                        pQueryString,
                        pId,
                        pError});
            pId = ((long)(results[0]));
            pError = ((string)(results[1]));
        }
        
        /// <remarks/>
        public void DataExecuteIdAsync(string pUsernameOrId, string password, string pQueryString, long pId, string pError) {
            this.DataExecuteIdAsync(pUsernameOrId, password, pQueryString, pId, pError, null);
        }
        
        /// <remarks/>
        public void DataExecuteIdAsync(string pUsernameOrId, string password, string pQueryString, long pId, string pError, object userState) {
            if ((this.DataExecuteIdOperationCompleted == null)) {
                this.DataExecuteIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDataExecuteIdOperationCompleted);
            }
            this.InvokeAsync("DataExecuteId", new object[] {
                        pUsernameOrId,
                        password,
                        pQueryString,
                        pId,
                        pError}, this.DataExecuteIdOperationCompleted, userState);
        }
        
        private void OnDataExecuteIdOperationCompleted(object arg) {
            if ((this.DataExecuteIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DataExecuteIdCompleted(this, new DataExecuteIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DataMultiExecute", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DataMultiExecute(string pUsernameOrId, string password, string[] pQueryArrString, ref string pError) {
            object[] results = this.Invoke("DataMultiExecute", new object[] {
                        pUsernameOrId,
                        password,
                        pQueryArrString,
                        pError});
            pError = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DataMultiExecuteAsync(string pUsernameOrId, string password, string[] pQueryArrString, string pError) {
            this.DataMultiExecuteAsync(pUsernameOrId, password, pQueryArrString, pError, null);
        }
        
        /// <remarks/>
        public void DataMultiExecuteAsync(string pUsernameOrId, string password, string[] pQueryArrString, string pError, object userState) {
            if ((this.DataMultiExecuteOperationCompleted == null)) {
                this.DataMultiExecuteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDataMultiExecuteOperationCompleted);
            }
            this.InvokeAsync("DataMultiExecute", new object[] {
                        pUsernameOrId,
                        password,
                        pQueryArrString,
                        pError}, this.DataMultiExecuteOperationCompleted, userState);
        }
        
        private void OnDataMultiExecuteOperationCompleted(object arg) {
            if ((this.DataMultiExecuteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DataMultiExecuteCompleted(this, new DataMultiExecuteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DataScalar", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DataScalar(string pUsernameOrId, string password, string pStringQuery, ref object pObject, ref string pError) {
            object[] results = this.Invoke("DataScalar", new object[] {
                        pUsernameOrId,
                        password,
                        pStringQuery,
                        pObject,
                        pError});
            pObject = ((object)(results[0]));
            pError = ((string)(results[1]));
        }
        
        /// <remarks/>
        public void DataScalarAsync(string pUsernameOrId, string password, string pStringQuery, object pObject, string pError) {
            this.DataScalarAsync(pUsernameOrId, password, pStringQuery, pObject, pError, null);
        }
        
        /// <remarks/>
        public void DataScalarAsync(string pUsernameOrId, string password, string pStringQuery, object pObject, string pError, object userState) {
            if ((this.DataScalarOperationCompleted == null)) {
                this.DataScalarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDataScalarOperationCompleted);
            }
            this.InvokeAsync("DataScalar", new object[] {
                        pUsernameOrId,
                        password,
                        pStringQuery,
                        pObject,
                        pError}, this.DataScalarOperationCompleted, userState);
        }
        
        private void OnDataScalarOperationCompleted(object arg) {
            if ((this.DataScalarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DataScalarCompleted(this, new DataScalarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DataCommandBuilderUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DataCommandBuilderUpdate(string pUsernameOrId, string password, System.Data.DataSet pDataset, string pTableName, string pToTable, ref string pError) {
            object[] results = this.Invoke("DataCommandBuilderUpdate", new object[] {
                        pUsernameOrId,
                        password,
                        pDataset,
                        pTableName,
                        pToTable,
                        pError});
            pError = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DataCommandBuilderUpdateAsync(string pUsernameOrId, string password, System.Data.DataSet pDataset, string pTableName, string pToTable, string pError) {
            this.DataCommandBuilderUpdateAsync(pUsernameOrId, password, pDataset, pTableName, pToTable, pError, null);
        }
        
        /// <remarks/>
        public void DataCommandBuilderUpdateAsync(string pUsernameOrId, string password, System.Data.DataSet pDataset, string pTableName, string pToTable, string pError, object userState) {
            if ((this.DataCommandBuilderUpdateOperationCompleted == null)) {
                this.DataCommandBuilderUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDataCommandBuilderUpdateOperationCompleted);
            }
            this.InvokeAsync("DataCommandBuilderUpdate", new object[] {
                        pUsernameOrId,
                        password,
                        pDataset,
                        pTableName,
                        pToTable,
                        pError}, this.DataCommandBuilderUpdateOperationCompleted, userState);
        }
        
        private void OnDataCommandBuilderUpdateOperationCompleted(object arg) {
            if ((this.DataCommandBuilderUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DataCommandBuilderUpdateCompleted(this, new DataCommandBuilderUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DataSaveImage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DataSaveImage(string pUsernameOrId, string password, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] pImageBuffer, string pId, string pColumnIdName, string pColumnImageName, string pTableName, ref string pError) {
            object[] results = this.Invoke("DataSaveImage", new object[] {
                        pUsernameOrId,
                        password,
                        pImageBuffer,
                        pId,
                        pColumnIdName,
                        pColumnImageName,
                        pTableName,
                        pError});
            pError = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DataSaveImageAsync(string pUsernameOrId, string password, byte[] pImageBuffer, string pId, string pColumnIdName, string pColumnImageName, string pTableName, string pError) {
            this.DataSaveImageAsync(pUsernameOrId, password, pImageBuffer, pId, pColumnIdName, pColumnImageName, pTableName, pError, null);
        }
        
        /// <remarks/>
        public void DataSaveImageAsync(string pUsernameOrId, string password, byte[] pImageBuffer, string pId, string pColumnIdName, string pColumnImageName, string pTableName, string pError, object userState) {
            if ((this.DataSaveImageOperationCompleted == null)) {
                this.DataSaveImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDataSaveImageOperationCompleted);
            }
            this.InvokeAsync("DataSaveImage", new object[] {
                        pUsernameOrId,
                        password,
                        pImageBuffer,
                        pId,
                        pColumnIdName,
                        pColumnImageName,
                        pTableName,
                        pError}, this.DataSaveImageOperationCompleted, userState);
        }
        
        private void OnDataSaveImageOperationCompleted(object arg) {
            if ((this.DataSaveImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DataSaveImageCompleted(this, new DataSaveImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DataReadImage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] DataReadImage(string pUsernameOrId, string password, string pId, string pColumnIdName, string pColumnImageName, string pTableName, ref string pError) {
            object[] results = this.Invoke("DataReadImage", new object[] {
                        pUsernameOrId,
                        password,
                        pId,
                        pColumnIdName,
                        pColumnImageName,
                        pTableName,
                        pError});
            pError = ((string)(results[1]));
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void DataReadImageAsync(string pUsernameOrId, string password, string pId, string pColumnIdName, string pColumnImageName, string pTableName, string pError) {
            this.DataReadImageAsync(pUsernameOrId, password, pId, pColumnIdName, pColumnImageName, pTableName, pError, null);
        }
        
        /// <remarks/>
        public void DataReadImageAsync(string pUsernameOrId, string password, string pId, string pColumnIdName, string pColumnImageName, string pTableName, string pError, object userState) {
            if ((this.DataReadImageOperationCompleted == null)) {
                this.DataReadImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDataReadImageOperationCompleted);
            }
            this.InvokeAsync("DataReadImage", new object[] {
                        pUsernameOrId,
                        password,
                        pId,
                        pColumnIdName,
                        pColumnImageName,
                        pTableName,
                        pError}, this.DataReadImageOperationCompleted, userState);
        }
        
        private void OnDataReadImageOperationCompleted(object arg) {
            if ((this.DataReadImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DataReadImageCompleted(this, new DataReadImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DataExecuteForProduct", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DataExecuteForProduct(string pUsernameOrId, string password, string Name, string Name2, string Name3, string Unit, decimal UnitPrice, int IsNode, int IsPrint, string Notes, int ParentId, string CreateDate, string UpdateDate, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] Image, ref string pError) {
            object[] results = this.Invoke("DataExecuteForProduct", new object[] {
                        pUsernameOrId,
                        password,
                        Name,
                        Name2,
                        Name3,
                        Unit,
                        UnitPrice,
                        IsNode,
                        IsPrint,
                        Notes,
                        ParentId,
                        CreateDate,
                        UpdateDate,
                        Image,
                        pError});
            pError = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DataExecuteForProductAsync(string pUsernameOrId, string password, string Name, string Name2, string Name3, string Unit, decimal UnitPrice, int IsNode, int IsPrint, string Notes, int ParentId, string CreateDate, string UpdateDate, byte[] Image, string pError) {
            this.DataExecuteForProductAsync(pUsernameOrId, password, Name, Name2, Name3, Unit, UnitPrice, IsNode, IsPrint, Notes, ParentId, CreateDate, UpdateDate, Image, pError, null);
        }
        
        /// <remarks/>
        public void DataExecuteForProductAsync(
                    string pUsernameOrId, 
                    string password, 
                    string Name, 
                    string Name2, 
                    string Name3, 
                    string Unit, 
                    decimal UnitPrice, 
                    int IsNode, 
                    int IsPrint, 
                    string Notes, 
                    int ParentId, 
                    string CreateDate, 
                    string UpdateDate, 
                    byte[] Image, 
                    string pError, 
                    object userState) {
            if ((this.DataExecuteForProductOperationCompleted == null)) {
                this.DataExecuteForProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDataExecuteForProductOperationCompleted);
            }
            this.InvokeAsync("DataExecuteForProduct", new object[] {
                        pUsernameOrId,
                        password,
                        Name,
                        Name2,
                        Name3,
                        Unit,
                        UnitPrice,
                        IsNode,
                        IsPrint,
                        Notes,
                        ParentId,
                        CreateDate,
                        UpdateDate,
                        Image,
                        pError}, this.DataExecuteForProductOperationCompleted, userState);
        }
        
        private void OnDataExecuteForProductOperationCompleted(object arg) {
            if ((this.DataExecuteForProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DataExecuteForProductCompleted(this, new DataExecuteForProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DataExecuteEdit_ForProduct", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DataExecuteEdit_ForProduct(string pUsernameOrId, string password, string Name, string Name2, string Name3, string Unit, decimal UnitPrice, int IsNode, int IsPrint, string Notes, int ParentId, string UpdateDate, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] Image, string ProductId, ref string pError) {
            object[] results = this.Invoke("DataExecuteEdit_ForProduct", new object[] {
                        pUsernameOrId,
                        password,
                        Name,
                        Name2,
                        Name3,
                        Unit,
                        UnitPrice,
                        IsNode,
                        IsPrint,
                        Notes,
                        ParentId,
                        UpdateDate,
                        Image,
                        ProductId,
                        pError});
            pError = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DataExecuteEdit_ForProductAsync(string pUsernameOrId, string password, string Name, string Name2, string Name3, string Unit, decimal UnitPrice, int IsNode, int IsPrint, string Notes, int ParentId, string UpdateDate, byte[] Image, string ProductId, string pError) {
            this.DataExecuteEdit_ForProductAsync(pUsernameOrId, password, Name, Name2, Name3, Unit, UnitPrice, IsNode, IsPrint, Notes, ParentId, UpdateDate, Image, ProductId, pError, null);
        }
        
        /// <remarks/>
        public void DataExecuteEdit_ForProductAsync(
                    string pUsernameOrId, 
                    string password, 
                    string Name, 
                    string Name2, 
                    string Name3, 
                    string Unit, 
                    decimal UnitPrice, 
                    int IsNode, 
                    int IsPrint, 
                    string Notes, 
                    int ParentId, 
                    string UpdateDate, 
                    byte[] Image, 
                    string ProductId, 
                    string pError, 
                    object userState) {
            if ((this.DataExecuteEdit_ForProductOperationCompleted == null)) {
                this.DataExecuteEdit_ForProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDataExecuteEdit_ForProductOperationCompleted);
            }
            this.InvokeAsync("DataExecuteEdit_ForProduct", new object[] {
                        pUsernameOrId,
                        password,
                        Name,
                        Name2,
                        Name3,
                        Unit,
                        UnitPrice,
                        IsNode,
                        IsPrint,
                        Notes,
                        ParentId,
                        UpdateDate,
                        Image,
                        ProductId,
                        pError}, this.DataExecuteEdit_ForProductOperationCompleted, userState);
        }
        
        private void OnDataExecuteEdit_ForProductOperationCompleted(object arg) {
            if ((this.DataExecuteEdit_ForProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DataExecuteEdit_ForProductCompleted(this, new DataExecuteEdit_ForProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Tran_Insert_for_Order", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Tran_Insert_for_Order(string pUsernameOrId, string password, string Lang, string pPrinterName, [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")] [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)] string[][] parram, [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfArrayOfString")] [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString", NestingLevel=1)] [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=2)] string[][][] listParam, [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")] [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)] string[][] paramDesk, ref string pError, ref bool res, ref bool IsPrint, ref string pOrderId) {
            object[] results = this.Invoke("Tran_Insert_for_Order", new object[] {
                        pUsernameOrId,
                        password,
                        Lang,
                        pPrinterName,
                        parram,
                        listParam,
                        paramDesk,
                        pError,
                        res,
                        IsPrint,
                        pOrderId});
            pError = ((string)(results[0]));
            res = ((bool)(results[1]));
            IsPrint = ((bool)(results[2]));
            pOrderId = ((string)(results[3]));
        }
        
        /// <remarks/>
        public void Tran_Insert_for_OrderAsync(string pUsernameOrId, string password, string Lang, string pPrinterName, string[][] parram, string[][][] listParam, string[][] paramDesk, string pError, bool res, bool IsPrint, string pOrderId) {
            this.Tran_Insert_for_OrderAsync(pUsernameOrId, password, Lang, pPrinterName, parram, listParam, paramDesk, pError, res, IsPrint, pOrderId, null);
        }
        
        /// <remarks/>
        public void Tran_Insert_for_OrderAsync(string pUsernameOrId, string password, string Lang, string pPrinterName, string[][] parram, string[][][] listParam, string[][] paramDesk, string pError, bool res, bool IsPrint, string pOrderId, object userState) {
            if ((this.Tran_Insert_for_OrderOperationCompleted == null)) {
                this.Tran_Insert_for_OrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTran_Insert_for_OrderOperationCompleted);
            }
            this.InvokeAsync("Tran_Insert_for_Order", new object[] {
                        pUsernameOrId,
                        password,
                        Lang,
                        pPrinterName,
                        parram,
                        listParam,
                        paramDesk,
                        pError,
                        res,
                        IsPrint,
                        pOrderId}, this.Tran_Insert_for_OrderOperationCompleted, userState);
        }
        
        private void OnTran_Insert_for_OrderOperationCompleted(object arg) {
            if ((this.Tran_Insert_for_OrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Tran_Insert_for_OrderCompleted(this, new Tran_Insert_for_OrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Tran_Insert_Receipt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Tran_Insert_Receipt(string pUsernameOrId, string password, ref string pError, [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")] [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)] string[][] Receipt, [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfArrayOfString")] [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString", NestingLevel=1)] [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=2)] string[][][] listReceiptDetail, [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfArrayOfString")] [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString", NestingLevel=1)] [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=2)] string[][][] listReceiptCard, [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")] [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)] string[][] ReceiptMember, [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")] [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)] string[][] ReceiptInfo, ref bool res, ref string ReceiptID) {
            object[] results = this.Invoke("Tran_Insert_Receipt", new object[] {
                        pUsernameOrId,
                        password,
                        pError,
                        Receipt,
                        listReceiptDetail,
                        listReceiptCard,
                        ReceiptMember,
                        ReceiptInfo,
                        res,
                        ReceiptID});
            pError = ((string)(results[0]));
            res = ((bool)(results[1]));
            ReceiptID = ((string)(results[2]));
        }
        
        /// <remarks/>
        public void Tran_Insert_ReceiptAsync(string pUsernameOrId, string password, string pError, string[][] Receipt, string[][][] listReceiptDetail, string[][][] listReceiptCard, string[][] ReceiptMember, string[][] ReceiptInfo, bool res, string ReceiptID) {
            this.Tran_Insert_ReceiptAsync(pUsernameOrId, password, pError, Receipt, listReceiptDetail, listReceiptCard, ReceiptMember, ReceiptInfo, res, ReceiptID, null);
        }
        
        /// <remarks/>
        public void Tran_Insert_ReceiptAsync(string pUsernameOrId, string password, string pError, string[][] Receipt, string[][][] listReceiptDetail, string[][][] listReceiptCard, string[][] ReceiptMember, string[][] ReceiptInfo, bool res, string ReceiptID, object userState) {
            if ((this.Tran_Insert_ReceiptOperationCompleted == null)) {
                this.Tran_Insert_ReceiptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTran_Insert_ReceiptOperationCompleted);
            }
            this.InvokeAsync("Tran_Insert_Receipt", new object[] {
                        pUsernameOrId,
                        password,
                        pError,
                        Receipt,
                        listReceiptDetail,
                        listReceiptCard,
                        ReceiptMember,
                        ReceiptInfo,
                        res,
                        ReceiptID}, this.Tran_Insert_ReceiptOperationCompleted, userState);
        }
        
        private void OnTran_Insert_ReceiptOperationCompleted(object arg) {
            if ((this.Tran_Insert_ReceiptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Tran_Insert_ReceiptCompleted(this, new Tran_Insert_ReceiptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveImage_IntoObject", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveImage_IntoObject([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] pImageBuffer, string ObjectId, string OldImgName, ref string pError) {
            object[] results = this.Invoke("SaveImage_IntoObject", new object[] {
                        pImageBuffer,
                        ObjectId,
                        OldImgName,
                        pError});
            pError = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveImage_IntoObjectAsync(byte[] pImageBuffer, string ObjectId, string OldImgName, string pError) {
            this.SaveImage_IntoObjectAsync(pImageBuffer, ObjectId, OldImgName, pError, null);
        }
        
        /// <remarks/>
        public void SaveImage_IntoObjectAsync(byte[] pImageBuffer, string ObjectId, string OldImgName, string pError, object userState) {
            if ((this.SaveImage_IntoObjectOperationCompleted == null)) {
                this.SaveImage_IntoObjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveImage_IntoObjectOperationCompleted);
            }
            this.InvokeAsync("SaveImage_IntoObject", new object[] {
                        pImageBuffer,
                        ObjectId,
                        OldImgName,
                        pError}, this.SaveImage_IntoObjectOperationCompleted, userState);
        }
        
        private void OnSaveImage_IntoObjectOperationCompleted(object arg) {
            if ((this.SaveImage_IntoObjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveImage_IntoObjectCompleted(this, new SaveImage_IntoObjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveImage_IntoEmployee", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveImage_IntoEmployee([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] pImageBuffer, string EmployeeId, ref string pError) {
            object[] results = this.Invoke("SaveImage_IntoEmployee", new object[] {
                        pImageBuffer,
                        EmployeeId,
                        pError});
            pError = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveImage_IntoEmployeeAsync(byte[] pImageBuffer, string EmployeeId, string pError) {
            this.SaveImage_IntoEmployeeAsync(pImageBuffer, EmployeeId, pError, null);
        }
        
        /// <remarks/>
        public void SaveImage_IntoEmployeeAsync(byte[] pImageBuffer, string EmployeeId, string pError, object userState) {
            if ((this.SaveImage_IntoEmployeeOperationCompleted == null)) {
                this.SaveImage_IntoEmployeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveImage_IntoEmployeeOperationCompleted);
            }
            this.InvokeAsync("SaveImage_IntoEmployee", new object[] {
                        pImageBuffer,
                        EmployeeId,
                        pError}, this.SaveImage_IntoEmployeeOperationCompleted, userState);
        }
        
        private void OnSaveImage_IntoEmployeeOperationCompleted(object arg) {
            if ((this.SaveImage_IntoEmployeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveImage_IntoEmployeeCompleted(this, new SaveImage_IntoEmployeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveImage_IntoProduct", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveImage_IntoProduct([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] pImageBuffer, string EmployeeId, string OldImgName, ref string pError) {
            object[] results = this.Invoke("SaveImage_IntoProduct", new object[] {
                        pImageBuffer,
                        EmployeeId,
                        OldImgName,
                        pError});
            pError = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveImage_IntoProductAsync(byte[] pImageBuffer, string EmployeeId, string OldImgName, string pError) {
            this.SaveImage_IntoProductAsync(pImageBuffer, EmployeeId, OldImgName, pError, null);
        }
        
        /// <remarks/>
        public void SaveImage_IntoProductAsync(byte[] pImageBuffer, string EmployeeId, string OldImgName, string pError, object userState) {
            if ((this.SaveImage_IntoProductOperationCompleted == null)) {
                this.SaveImage_IntoProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveImage_IntoProductOperationCompleted);
            }
            this.InvokeAsync("SaveImage_IntoProduct", new object[] {
                        pImageBuffer,
                        EmployeeId,
                        OldImgName,
                        pError}, this.SaveImage_IntoProductOperationCompleted, userState);
        }
        
        private void OnSaveImage_IntoProductOperationCompleted(object arg) {
            if ((this.SaveImage_IntoProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveImage_IntoProductCompleted(this, new SaveImage_IntoProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Print_Order", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Print_Order(string OrderId, string Lang, string PlaceOfPrinting, string StatusPrint, ref string pError) {
            object[] results = this.Invoke("Print_Order", new object[] {
                        OrderId,
                        Lang,
                        PlaceOfPrinting,
                        StatusPrint,
                        pError});
            pError = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Print_OrderAsync(string OrderId, string Lang, string PlaceOfPrinting, string StatusPrint, string pError) {
            this.Print_OrderAsync(OrderId, Lang, PlaceOfPrinting, StatusPrint, pError, null);
        }
        
        /// <remarks/>
        public void Print_OrderAsync(string OrderId, string Lang, string PlaceOfPrinting, string StatusPrint, string pError, object userState) {
            if ((this.Print_OrderOperationCompleted == null)) {
                this.Print_OrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrint_OrderOperationCompleted);
            }
            this.InvokeAsync("Print_Order", new object[] {
                        OrderId,
                        Lang,
                        PlaceOfPrinting,
                        StatusPrint,
                        pError}, this.Print_OrderOperationCompleted, userState);
        }
        
        private void OnPrint_OrderOperationCompleted(object arg) {
            if ((this.Print_OrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Print_OrderCompleted(this, new Print_OrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Update_DeskId_For_Order", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Update_DeskId_For_Order(string pUsernameOrId, string password, string[] prm, string pDeskIdTo, string pDeskIdFrom, ref string pError, ref bool res) {
            object[] results = this.Invoke("Update_DeskId_For_Order", new object[] {
                        pUsernameOrId,
                        password,
                        prm,
                        pDeskIdTo,
                        pDeskIdFrom,
                        pError,
                        res});
            pError = ((string)(results[0]));
            res = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void Update_DeskId_For_OrderAsync(string pUsernameOrId, string password, string[] prm, string pDeskIdTo, string pDeskIdFrom, string pError, bool res) {
            this.Update_DeskId_For_OrderAsync(pUsernameOrId, password, prm, pDeskIdTo, pDeskIdFrom, pError, res, null);
        }
        
        /// <remarks/>
        public void Update_DeskId_For_OrderAsync(string pUsernameOrId, string password, string[] prm, string pDeskIdTo, string pDeskIdFrom, string pError, bool res, object userState) {
            if ((this.Update_DeskId_For_OrderOperationCompleted == null)) {
                this.Update_DeskId_For_OrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdate_DeskId_For_OrderOperationCompleted);
            }
            this.InvokeAsync("Update_DeskId_For_Order", new object[] {
                        pUsernameOrId,
                        password,
                        prm,
                        pDeskIdTo,
                        pDeskIdFrom,
                        pError,
                        res}, this.Update_DeskId_For_OrderOperationCompleted, userState);
        }
        
        private void OnUpdate_DeskId_For_OrderOperationCompleted(object arg) {
            if ((this.Update_DeskId_For_OrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Update_DeskId_For_OrderCompleted(this, new Update_DeskId_For_OrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Update_Order_Detail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Update_Order_Detail(string pUsernameOrId, string password, string pLang, string pPrinterName, string pOrderId, [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")] [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)] string[][] pPrm_O, [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfArrayOfString")] [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString", NestingLevel=1)] [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=2)] string[][][] pLst_ODNew, bool IsPrint, bool pHaveDiscount, ref string pError, ref bool res) {
            object[] results = this.Invoke("Update_Order_Detail", new object[] {
                        pUsernameOrId,
                        password,
                        pLang,
                        pPrinterName,
                        pOrderId,
                        pPrm_O,
                        pLst_ODNew,
                        IsPrint,
                        pHaveDiscount,
                        pError,
                        res});
            pError = ((string)(results[0]));
            res = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void Update_Order_DetailAsync(string pUsernameOrId, string password, string pLang, string pPrinterName, string pOrderId, string[][] pPrm_O, string[][][] pLst_ODNew, bool IsPrint, bool pHaveDiscount, string pError, bool res) {
            this.Update_Order_DetailAsync(pUsernameOrId, password, pLang, pPrinterName, pOrderId, pPrm_O, pLst_ODNew, IsPrint, pHaveDiscount, pError, res, null);
        }
        
        /// <remarks/>
        public void Update_Order_DetailAsync(string pUsernameOrId, string password, string pLang, string pPrinterName, string pOrderId, string[][] pPrm_O, string[][][] pLst_ODNew, bool IsPrint, bool pHaveDiscount, string pError, bool res, object userState) {
            if ((this.Update_Order_DetailOperationCompleted == null)) {
                this.Update_Order_DetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdate_Order_DetailOperationCompleted);
            }
            this.InvokeAsync("Update_Order_Detail", new object[] {
                        pUsernameOrId,
                        password,
                        pLang,
                        pPrinterName,
                        pOrderId,
                        pPrm_O,
                        pLst_ODNew,
                        IsPrint,
                        pHaveDiscount,
                        pError,
                        res}, this.Update_Order_DetailOperationCompleted, userState);
        }
        
        private void OnUpdate_Order_DetailOperationCompleted(object arg) {
            if ((this.Update_Order_DetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Update_Order_DetailCompleted(this, new Update_Order_DetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetValueScoreEx", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetValueScoreEx() {
            object[] results = this.Invoke("GetValueScoreEx", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetValueScoreExAsync() {
            this.GetValueScoreExAsync(null);
        }
        
        /// <remarks/>
        public void GetValueScoreExAsync(object userState) {
            if ((this.GetValueScoreExOperationCompleted == null)) {
                this.GetValueScoreExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetValueScoreExOperationCompleted);
            }
            this.InvokeAsync("GetValueScoreEx", new object[0], this.GetValueScoreExOperationCompleted, userState);
        }
        
        private void OnGetValueScoreExOperationCompleted(object arg) {
            if ((this.GetValueScoreExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetValueScoreExCompleted(this, new GetValueScoreExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPriceScore", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPriceScore() {
            object[] results = this.Invoke("GetPriceScore", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPriceScoreAsync() {
            this.GetPriceScoreAsync(null);
        }
        
        /// <remarks/>
        public void GetPriceScoreAsync(object userState) {
            if ((this.GetPriceScoreOperationCompleted == null)) {
                this.GetPriceScoreOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPriceScoreOperationCompleted);
            }
            this.InvokeAsync("GetPriceScore", new object[0], this.GetPriceScoreOperationCompleted, userState);
        }
        
        private void OnGetPriceScoreOperationCompleted(object arg) {
            if ((this.GetPriceScoreCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPriceScoreCompleted(this, new GetPriceScoreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Write_Score_Value", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Write_Score_Value(string pUsernameOrId, string password, string pScoreValue, string pPriceScore, ref string pError) {
            object[] results = this.Invoke("Write_Score_Value", new object[] {
                        pUsernameOrId,
                        password,
                        pScoreValue,
                        pPriceScore,
                        pError});
            pError = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Write_Score_ValueAsync(string pUsernameOrId, string password, string pScoreValue, string pPriceScore, string pError) {
            this.Write_Score_ValueAsync(pUsernameOrId, password, pScoreValue, pPriceScore, pError, null);
        }
        
        /// <remarks/>
        public void Write_Score_ValueAsync(string pUsernameOrId, string password, string pScoreValue, string pPriceScore, string pError, object userState) {
            if ((this.Write_Score_ValueOperationCompleted == null)) {
                this.Write_Score_ValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWrite_Score_ValueOperationCompleted);
            }
            this.InvokeAsync("Write_Score_Value", new object[] {
                        pUsernameOrId,
                        password,
                        pScoreValue,
                        pPriceScore,
                        pError}, this.Write_Score_ValueOperationCompleted, userState);
        }
        
        private void OnWrite_Score_ValueOperationCompleted(object arg) {
            if ((this.Write_Score_ValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Write_Score_ValueCompleted(this, new Write_Score_ValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void IsServiceReadyCompletedEventHandler(object sender, IsServiceReadyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsServiceReadyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsServiceReadyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void IsDataReadyCompletedEventHandler(object sender, IsDataReadyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsDataReadyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsDataReadyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void IsUserCompletedEventHandler(object sender, IsUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string pError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DataQueryCompletedEventHandler(object sender, DataQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DataQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DataQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet pDataset {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string pError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DataStoreProcQueryCompletedEventHandler(object sender, DataStoreProcQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DataStoreProcQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DataStoreProcQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet pDataset {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string pError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DataStoreProcQuery_ParamCompletedEventHandler(object sender, DataStoreProcQuery_ParamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DataStoreProcQuery_ParamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DataStoreProcQuery_ParamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet pDataset {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string pError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DataStoreProcExecuteCompletedEventHandler(object sender, DataStoreProcExecuteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DataStoreProcExecuteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DataStoreProcExecuteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string pError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DataStoreProceduceAndMultiQueryCompletedEventHandler(object sender, DataStoreProceduceAndMultiQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DataStoreProceduceAndMultiQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DataStoreProceduceAndMultiQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string pError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool pResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DataExecuteCompletedEventHandler(object sender, DataExecuteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DataExecuteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DataExecuteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string pError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DataExecuteIdCompletedEventHandler(object sender, DataExecuteIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DataExecuteIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DataExecuteIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long pId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string pError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DataMultiExecuteCompletedEventHandler(object sender, DataMultiExecuteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DataMultiExecuteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DataMultiExecuteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string pError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DataScalarCompletedEventHandler(object sender, DataScalarCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DataScalarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DataScalarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object pObject {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string pError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DataCommandBuilderUpdateCompletedEventHandler(object sender, DataCommandBuilderUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DataCommandBuilderUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DataCommandBuilderUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string pError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DataSaveImageCompletedEventHandler(object sender, DataSaveImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DataSaveImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DataSaveImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string pError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DataReadImageCompletedEventHandler(object sender, DataReadImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DataReadImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DataReadImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string pError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DataExecuteForProductCompletedEventHandler(object sender, DataExecuteForProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DataExecuteForProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DataExecuteForProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string pError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DataExecuteEdit_ForProductCompletedEventHandler(object sender, DataExecuteEdit_ForProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DataExecuteEdit_ForProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DataExecuteEdit_ForProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string pError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void Tran_Insert_for_OrderCompletedEventHandler(object sender, Tran_Insert_for_OrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Tran_Insert_for_OrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Tran_Insert_for_OrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string pError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool res {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public bool IsPrint {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string pOrderId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void Tran_Insert_ReceiptCompletedEventHandler(object sender, Tran_Insert_ReceiptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Tran_Insert_ReceiptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Tran_Insert_ReceiptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string pError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool res {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string ReceiptID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SaveImage_IntoObjectCompletedEventHandler(object sender, SaveImage_IntoObjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveImage_IntoObjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveImage_IntoObjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string pError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SaveImage_IntoEmployeeCompletedEventHandler(object sender, SaveImage_IntoEmployeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveImage_IntoEmployeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveImage_IntoEmployeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string pError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SaveImage_IntoProductCompletedEventHandler(object sender, SaveImage_IntoProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveImage_IntoProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveImage_IntoProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string pError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void Print_OrderCompletedEventHandler(object sender, Print_OrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Print_OrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Print_OrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string pError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void Update_DeskId_For_OrderCompletedEventHandler(object sender, Update_DeskId_For_OrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Update_DeskId_For_OrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Update_DeskId_For_OrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string pError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool res {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void Update_Order_DetailCompletedEventHandler(object sender, Update_Order_DetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Update_Order_DetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Update_Order_DetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string pError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool res {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetValueScoreExCompletedEventHandler(object sender, GetValueScoreExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetValueScoreExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetValueScoreExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetPriceScoreCompletedEventHandler(object sender, GetPriceScoreCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPriceScoreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPriceScoreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void Write_Score_ValueCompletedEventHandler(object sender, Write_Score_ValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Write_Score_ValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Write_Score_ValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string pError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591